<?xml version="1.0" encoding="UTF-8"?>

<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">

  <?define SourceDir = "C:\Windows\System32\WindowsPowerShell\v1.0" ?>


  <Product Id="4321067a-2cd6-4d67-a399-6f00c2aa1311"
           Name="HXConnectPowerShellToolkit"
           Language="1033"
           Version="1.0.0.0"
           Manufacturer="Cisco"
           UpgradeCode="b3a142c6-4b9f-4af0-9086-232b6342c0fc">

    <Package InstallerVersion="200" Compressed="yes"  InstallPrivileges="elevated" InstallScope="perMachine"/>
    <WixVariable Id="WixUILicenseRtf" Value="bobpl.rtf" />
    <MajorUpgrade DowngradeErrorMessage="A newer version of [ProductName] is already installed."  AllowSameVersionUpgrades="yes" IgnoreRemoveFailure="no" />
    <MediaTemplate EmbedCab="yes" />

    <Upgrade Id="b3a142c6-4b9f-4af0-9086-232b6342c0fc">
      <UpgradeVersion Minimum="1.0.0"
                IncludeMinimum="yes"
                OnlyDetect="no"
                Maximum="99.99.99.99"
                IncludeMaximum="no"
                Property="PREVIOUSFOUND" />
    </Upgrade>
    <Property Id="SYBASE_10INSTALLATION">
      <RegistrySearch Id="RegSearch_Sybase_MajorVersion"  Type="raw"
                      Root="HKLM"
                      Key="SOFTWARE\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell"
                      Name="Path"  />
    </Property>

    <Condition Message="MyApp requires Sybase 10.0. Please make sure it is installed.">SYBASE_10INSTALLATION</Condition>

    <Condition Message="A newer version of this software is already installed.">NOT NEWERVERSIONDETECTED</Condition>

    <Feature Id="Feature_Main" Title="[ProductName]" Level="1" Absent="disallow" Description="Installs all necessary [ProductName] components." >
      <ComponentGroupRef Id="MainComponents" />

      <!--ashima starts-->
      <ComponentRef Id="StartMenuShortComponent"  />
      <ComponentRef Id="DeskMenu"></ComponentRef>
      <!--Desktop shortcut with default folder -->
      <Component Id="DeskMenu"
             Directory="DesktopFolder" Guid="343cd0aa-7bb5-4040-a601-62e8ad1d3c2c"
                          >

        <Shortcut Id="DesktopShortcut"
                  Directory="DesktopFolder"
                  Name="HXConnect PSTK"
                  Description="HXConnect Powershell Toolkit"
                  WorkingDirectory="INSTALLFOLDER"
                  Target="[WindowsFolder]system32\WindowsPowerShell\v1.0\powershell.exe"
                  Arguments="-noe -c &quot;. \&quot;C:\Program Files (x86)\CISCO_HX\PSTK\PSTK_service_install.ps1\&quot; $true&quot;"
                  Icon="deskpowershell.exe"
                  IconIndex="0"
                    
            >
          <Icon Id="deskpowershell.exe" SourceFile="$(var.SourceDir)\powershell_ise.exe"/>

        </Shortcut>


        <RegistryKey Root="HKCU" Key="Software\[Manufacturer]\[ProductName]" ForceCreateOnInstall="yes" ForceDeleteOnUninstall="yes">
          <RegistryValue  Type="integer" Value="1" Name="Installed" KeyPath="yes" />
        </RegistryKey>
        <RemoveFolder Id="DesktopFolder" On="uninstall"/>
      </Component>
      <!--ComponentRef Id="ApplicationShortcutDesktop"/-->
    </Feature>

    <Property Id="WIXUI_INSTALLDIR" Value="INSTALLFOLDER" />
    <Property Id="ARPNOREPAIR" Value="yes" Secure="yes" />
    <Property Id="ARPNOMODIFY" Value="yes" Secure="yes" />
    <!--UIRef Id="WixUI_InstallDir" /-->
    <UIRef Id="SetupDialogUI" />
    <Icon Id="icon.ps1" SourceFile="icon.ico"/>
    <Property Id="ARPPRODUCTICON" Value="icon.ps1" />

    <InstallUISequence>
      <Show Dialog="WelcomeDlg" After="CostFinalize"/>
    </InstallUISequence>
  </Product>

  <Fragment>

    <Directory Id="TARGETDIR" Name="SourceDir" >

      <Directory Id="IISTIERINSTALLATION" Name="IISTierInstallation">
      </Directory>
      <Directory Id="DesktopFolder" Name="Desktop">
      </Directory>


      <!--SHprtcut on Program menu-->
      <Directory Id="StartMenuFolder" Name="Programs">
        <Component Id="StartMenuShortComponent" Guid="BA970047-A2B1-425C-AE87-47F9C7EAE8F3">
          <Shortcut Id="PSTK.Shortcut" Name="HXConnect PSTK" IconIndex="0" Icon="icon.ps1" WorkingDirectory="INSTALLFOLDER" Target="[WindowsFolder]system32\WindowsPowerShell\v1.0\powershell.exe" Arguments="-noe -c &quot;. \&quot;C:\Program Files (x86)\VMware\Infrastructure\PowerCLI\Scripts\Initialize-PowerCLIEnvironment.ps1\&quot; $true&quot;" />
          <RegistryKey Root="HKCU" Key="Software\[Manufacturer]\[ProductName]" ForceCreateOnInstall="yes" ForceDeleteOnUninstall="yes">
            <RegistryValue  Type="integer" Value="1" Name="Installed" KeyPath="yes" />
          </RegistryKey>
          <RemoveFolder Id="StartMenuFolder" On="uninstall"/>
        </Component>
      </Directory>
      <!-- Set up the directory -->
      <Directory Id="ProgramFilesFolder">
        <Directory Id="INSTALLCISCO" Name="CISCO_HX" >
          <Directory Id="INSTALLFOLDER" Name="PSTK" >
          </Directory>
        </Directory>
      </Directory>
    </Directory>


  </Fragment>
 <Fragment Id="fm35">
    <PropertyRef Id="NETFRAMEWORK35" />
    <Condition Message="framework 3.5 is not installed">
      <![CDATA[Installed OR NETFRAMEWORK35]]>
    </Condition>
  </Fragment>

  <Fragment>
    <Feature Id="TNReinstall" Title="IllRegistry" Level="1">
      <ComponentGroupRef Id="MainComponents"/>
    </Feature>
    <Feature Id="ProductFeature" Title="Test1" Level="1">
      <!--ComponentRef Id="PSTK_update_file" /-->
      <ComponentRef Id="PSTKInstallScript" />
      <!--ComponentRef Id="PSTKxmlScript" /-->
      <!--ComponentGroupRef Id="Product.Generated" /-->
    </Feature>
    <!-- Copy the files -->
    <DirectoryRef Id="IISTIERINSTALLATION">

      <Component Id ="PSTKInstallScript" Guid="1bba3d42-0c9d-4a3b-b38c-e078c5c85c90">
        <File Id="PSTKscript1" Name="PSTK_service_install.ps1" Source="PSTK_service_install.ps1" />
      </Component>
    </DirectoryRef>
    <!-- Run custom action to run the powershell script-->
    <Property Id="POWERSHELLEXE">
      <RegistrySearch Id="POWERSHELLEXE"
                      Type="raw"
                      Root="HKLM"
                      Key="SOFTWARE\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell"
                      Name="Path" />
    </Property>

    <SetProperty Id="RunPSscript"
             After="InstallFiles"
             Sequence="execute"
             Value ="&quot;[POWERSHELL.EXE]&quot; -Version 2.0 -NoProfile -NonInteractive -InputFormat None -ExecutionPolicy Bypass -Command &quot;&amp; '[#PSTK_service_install.ps1]' ; exit $$($Error.Count)&quot;" />

    <CustomAction Id="RunPSscript"
                  BinaryKey="WixCA"
                  DllEntry="CAQuietExec"
                  Execute="deferred"
                  Return="check"
                  Impersonate="yes" />

    <!--Custom Action="RunPSscript" After="InstallFiles">
    <![CDATA[NOT Installed]]>
  </Custom-->

    <ComponentGroup Id="MainComponents" Directory="INSTALLFOLDER" >
      <Component Id="CMP_PS_SCRIPT" Guid="CC0E0E77-810F-4DFE-88F8-9FDA840EC0D0"  NeverOverwrite="no" >


        <File Source="LICENSE"/>
        <File Source="$(var.SP_powershell.TargetPath)" />
        <!--File Source="$(PSTK_service_install.ps1)" />
        <File Id="bobpl.rtf" Name="bobpl.rtf"  Source="$(var.SP_powershell.TargetDir)" ></File-->
        <File Id="Swagger.dll" Name="IO.Swagger.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="SP_powershell.psd1" Name="SP_powershell.psd1"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="SP_powershell.Help.xml" Name="SP_powershell.Help.xml"  Source="$(var.SP_powershell.TargetDir)"></File>
        <File Id="RestSharp.dll" Name="RestSharp.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <!--File Id="RestSharp.xml" Name="RestSharp.xml"  Source="$(var.SP_powershell.TargetDir)" ></File-->
        <File Id="ICSharpCode.SharpZipLib.dll" Name="ICSharpCode.SharpZipLib.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="InternalVimService50.dll" Name="InternalVimService50.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="Interop.VixCOM.dll" Name="Interop.VixCOM.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="IO.Swagger.pdb" Name="IO.Swagger.pdb"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="log4net.dll" Name="log4net.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="Microsoft.Management.Infrastructure.dll" Name="Microsoft.Management.Infrastructure.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="Microsoft.Practices.EnterpriseLibrary.Common.dll" Name="Microsoft.Practices.EnterpriseLibrary.Common.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="Microsoft.Practices.EnterpriseLibrary.Logging.dll" Name="Microsoft.Practices.EnterpriseLibrary.Logging.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="SP_powershell.dll.config" Name="SP_powershell.dll.config"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="Newtonsoft.Json.dll" Name="Newtonsoft.Json.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="Newtonsoft.Json.xml" Name="Newtonsoft.Json.xml"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="phclient.dll" Name="phclient.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="System.Management.Automation.dll" Name="System.Management.Automation.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="System.Management.Automation.xml" Name="System.Management.Automation.xml"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VimService65.dll" Name="VimService65.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.Security.CredentialStore.dll" Name="VMware.Security.CredentialStore.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.Vim.dll" Name="RestSharp.xml"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.VimAutomation.Ceip.dll" Name="VMware.VimAutomation.Ceip.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.VimAutomation.Logging.SoapInterceptor.dll" Name="VMware.VimAutomation.Logging.SoapInterceptor.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.VimAutomation.Sdk.Impl.dll" Name="VMware.VimAutomation.Sdk.Impl.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.VimAutomation.Sdk.Interop.dll" Name="VMware.VimAutomation.Sdk.Interop.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.VimAutomation.Sdk.Types.dll" Name="VMware.VimAutomation.Sdk.Types.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.VimAutomation.Sdk.Util10.dll" Name="VMware.VimAutomation.Sdk.Util10.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.VimAutomation.Sdk.Util10Ps.dll" Name="VMware.VimAutomation.Sdk.Util10Ps.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.VimAutomation.Srm.Views.dll" Name="VMware.VimAutomation.Srm.Views.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.VimAutomation.Srm.WsdlTypes.dll" Name="VMware.VimAutomation.Srm.WsdlTypes.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.VimAutomation.ViCore.Cmdlets.dll" Name="VMware.VimAutomation.ViCore.Cmdlets.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.VimAutomation.ViCore.Impl.dll" Name="VMware.VimAutomation.ViCore.Impl.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.VimAutomation.ViCore.Interop.dll" Name="VMware.VimAutomation.ViCore.Interop.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.VimAutomation.ViCore.Types.dll" Name="VMware.VimAutomation.ViCore.Types.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.VimAutomation.ViCore.Util10.dll" Name="VMware.VimAutomation.ViCore.Util10.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
        <File Id="VMware.VimAutomation.ViCore.Util10Ps.dll" Name="VMware.VimAutomation.ViCore.Util10Ps.dll"  Source="$(var.SP_powershell.TargetDir)" ></File>
      </Component>




      <Component Id="CMP_REGISTRY" NeverOverwrite="no">
        <RegistryKey Root="HKLM" Key="Software\[Manufacturer]\[ProductName]" >
          <RegistryValue Type="integer" Name="Installed" Value="1" KeyPath="yes"  />
        </RegistryKey>
      </Component>
    </ComponentGroup>

    <CustomAction Id="SetREINSTALL" Property="REINSTALL" Value="TNReinstall"/>

    <InstallUISequence>
      <Custom Action="SetREINSTALL" Before="CostInitialize"><![CDATA[Installed AND NOT (REMOVE ~= "ALL") AND NOT REINSTALL]]></Custom>
    </InstallUISequence>

  </Fragment>

  <Fragment>
    <UI Id="SetupDialogUI" >


      <TextStyle Id="WixUI_Font_Normal"  FaceName="Tahoma" Size="8" />
      <TextStyle Id="WixUI_Font_Bigger"  FaceName="Tahoma" Size="12" />
      <TextStyle Id="WixUI_Font_Title"   FaceName="Tahoma" Size="9" Bold="yes" />

      <Property Id="DefaultUIFont" Value="WixUI_Font_Normal" />
      <Property Id="WixUI_Mode" Value="InstallDir" />

      <DialogRef Id="BrowseDlg"/>
      <DialogRef Id="DiskCostDlg" />
      <DialogRef Id="ErrorDlg" />
      <DialogRef Id="FatalError" />
      <DialogRef Id="FilesInUse" />
      <DialogRef Id="MsiRMFilesInUse" />
      <DialogRef Id="PrepareDlg" />
      <DialogRef Id="ProgressDlg" />
      <DialogRef Id="ResumeDlg" />
      <DialogRef Id="UserExit" />

      <Publish Dialog="BrowseDlg" Control="OK" Event="DoAction" Value="WixUIValidatePath" Order="3">1</Publish>
      <Publish Dialog="BrowseDlg" Control="OK" Event="SpawnDialog" Value="InvalidDirDlg" Order="4"><![CDATA[WIXUI_INSTALLDIR_VALID<>"1"]]></Publish>

      <Publish Dialog="ExitDialog" Control="Finish" Event="EndDialog" Value="Return">1</Publish>

      <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg">NOT Installed</Publish>
      <!--<Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="UserInputDlg">1</Publish>-->
      <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">Installed AND PATCH</Publish>
      <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">Installed AND NOT PATCH</Publish>
      <!--Publish Dialog="LicenseAgreementDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish-->
      <Publish Dialog="LicenseAgreementDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
      <Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="InstallDirDlg">LicenseAccepted = "1"</Publish>
      <!--
      <Publish Dialog="UserInputDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
      <Publish Dialog="UserInputDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg">1</Publish>
by ashima
      <Publish Dialog="UserInputDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">0</Publish>
      <Publish Dialog="UserInputDlg" Control="Next" Event="NewDialog" Value="WelcomeDlg">1</Publish>-->

      <Publish Dialog="InstallDirDlg" Control="Back" Event="NewDialog" Value="LicenseAgreementDlg">1</Publish>
      <Publish Dialog="InstallDirDlg" Control="Next" Event="SetTargetPath" Value="[WIXUI_INSTALLDIR]" Order="1">1</Publish>
      <Publish Dialog="InstallDirDlg" Control="Next" Event="DoAction" Value="WixUIValidatePath" Order="2">NOT WIXUI_DONTVALIDATEPATH</Publish>
      <Publish Dialog="InstallDirDlg" Control="Next" Event="SpawnDialog" Value="InvalidDirDlg" Order="3"><![CDATA[NOT WIXUI_DONTVALIDATEPATH AND WIXUI_INSTALLDIR_VALID<>"1"]]></Publish>
      <Publish Dialog="InstallDirDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg" Order="4">WIXUI_DONTVALIDATEPATH OR WIXUI_INSTALLDIR_VALID="1"</Publish>
      <Publish Dialog="InstallDirDlg" Control="ChangeFolder" Property="_BrowseProperty" Value="[WIXUI_INSTALLDIR]" Order="1">1</Publish>
      <Publish Dialog="InstallDirDlg" Control="ChangeFolder" Event="SpawnDialog" Value="BrowseDlg" Order="2">1</Publish>

      <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="InstallDirDlg" Order="1">NOT Installed</Publish>
      <Publish Dialog="VerifyReadyDlg" Control="Install" Event="NewDialog" Value="ExitDialog" Order="1">1</Publish>
      <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="MaintenanceTypeDlg" Order="2">Installed AND NOT PATCH</Publish>
      <Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg" Order="2">Installed AND PATCH</Publish>

      <Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Event="NewDialog" Value="MaintenanceTypeDlg">1</Publish>

      <Publish Dialog="MaintenanceTypeDlg" Control="RepairButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="RemoveButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
      <Publish Dialog="MaintenanceTypeDlg" Control="Back" Event="NewDialog" Value="MaintenanceWelcomeDlg">1</Publish>

      <!--Property Id="ARPNOMODIFY" Value="1" /-->

    </UI>
    <UIRef Id="WixUI_Common" />
  </Fragment>
</Wix>
