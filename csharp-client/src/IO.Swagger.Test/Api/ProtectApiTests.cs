/* 
 * Swagger Server
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ProtectApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ProtectApiTests
    {
        private ProtectApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ProtectApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ProtectApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ProtectApi
            //Assert.IsInstanceOfType(typeof(ProtectApi), instance, "instance is a ProtectApi");
        }

        
        /// <summary>
        /// Test OpDpGroupGet
        /// </summary>
        [Test]
        public void OpDpGroupGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string type = null;
            //string acceptLanguage = null;
            //var response = instance.OpDpGroupGet(name, type, acceptLanguage);
            //Assert.IsInstanceOf<List<ProtectionGroupInfo>> (response, "response is List<ProtectionGroupInfo>");
        }
        
        /// <summary>
        /// Test OpDpGroupGroupidDelete
        /// </summary>
        [Test]
        public void OpDpGroupGroupidDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupId = null;
            //string acceptLanguage = null;
            //instance.OpDpGroupGroupidDelete(groupId, acceptLanguage);
            
        }
        
        /// <summary>
        /// Test OpDpGroupGroupidGet
        /// </summary>
        [Test]
        public void OpDpGroupGroupidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupId = null;
            //string fields = null;
            //string acceptLanguage = null;
            //var response = instance.OpDpGroupGroupidGet(groupId, fields, acceptLanguage);
            //Assert.IsInstanceOf<ProtectionGroupInfo> (response, "response is ProtectionGroupInfo");
        }
        
        /// <summary>
        /// Test OpDpGroupGroupidPut
        /// </summary>
        [Test]
        public void OpDpGroupGroupidPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupId = null;
            //GroupEditParams body = null;
            //string acceptLanguage = null;
            //var response = instance.OpDpGroupGroupidPut(groupId, body, acceptLanguage);
            //Assert.IsInstanceOf<ProtectionGroupInfo> (response, "response is ProtectionGroupInfo");
        }
        
        /// <summary>
        /// Test OpDpGroupPost
        /// </summary>
        [Test]
        public void OpDpGroupPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProtectionGroupSpec body = null;
            //string acceptLanguage = null;
            //var response = instance.OpDpGroupPost(body, acceptLanguage);
            //Assert.IsInstanceOf<ProtectionGroupInfo> (response, "response is ProtectionGroupInfo");
        }
        
        /// <summary>
        /// Test OpDpGroupScheduleReplicationPutTargetClusterId
        /// </summary>
        [Test]
        public void OpDpGroupScheduleReplicationPutTargetClusterIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupId = null;
            //string targetClusterId = null;
            //ReplicationSchedule body = null;
            //string acceptLanguage = null;
            //var response = instance.OpDpGroupScheduleReplicationPutTargetClusterId(groupId, targetClusterId, body, acceptLanguage);
            //Assert.IsInstanceOf<ReplicationSchedule> (response, "response is ReplicationSchedule");
        }
        
        /// <summary>
        /// Test OpDpGroupScheduleReplicationTargetClusterIdDelete
        /// </summary>
        [Test]
        public void OpDpGroupScheduleReplicationTargetClusterIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string groupId = null;
            //string targetClusterId = null;
            //string acceptLanguage = null;
            //var response = instance.OpDpGroupScheduleReplicationTargetClusterIdDelete(groupId, targetClusterId, acceptLanguage);
            //Assert.IsInstanceOf<ReplicationSchedule> (response, "response is ReplicationSchedule");
        }
        
        /// <summary>
        /// Test OpDpVmGet
        /// </summary>
        [Test]
        public void OpDpVmGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //string type = null;
            //string acceptLanguage = null;
            //var response = instance.OpDpVmGet(name, type, acceptLanguage);
            //Assert.IsInstanceOf<List<ProtectedVMInfo>> (response, "response is List<ProtectedVMInfo>");
        }
        
        /// <summary>
        /// Test OpDpVmPost
        /// </summary>
        [Test]
        public void OpDpVmPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ProtectedVMSpec body = null;
            //string acceptLanguage = null;
            //var response = instance.OpDpVmPost(body, acceptLanguage);
            //Assert.IsInstanceOf<ProtectedVMInfo> (response, "response is ProtectedVMInfo");
        }
        
        /// <summary>
        /// Test OpDpVmScheduleReplicationPutTargetClusterId
        /// </summary>
        [Test]
        public void OpDpVmScheduleReplicationPutTargetClusterIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string vmId = null;
            //string targetClusterId = null;
            //ReplicationSchedule body = null;
            //string acceptLanguage = null;
            //var response = instance.OpDpVmScheduleReplicationPutTargetClusterId(vmId, targetClusterId, body, acceptLanguage);
            //Assert.IsInstanceOf<ReplicationSchedule> (response, "response is ReplicationSchedule");
        }
        
        /// <summary>
        /// Test OpDpVmScheduleReplicationTargetClusterIdDelete
        /// </summary>
        [Test]
        public void OpDpVmScheduleReplicationTargetClusterIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string vmId = null;
            //string targetClusterId = null;
            //string acceptLanguage = null;
            //var response = instance.OpDpVmScheduleReplicationTargetClusterIdDelete(vmId, targetClusterId, acceptLanguage);
            //Assert.IsInstanceOf<ReplicationSchedule> (response, "response is ReplicationSchedule");
        }
        
        /// <summary>
        /// Test OpDpVmVmidGet
        /// </summary>
        [Test]
        public void OpDpVmVmidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string vmId = null;
            //string acceptLanguage = null;
            //var response = instance.OpDpVmVmidGet(vmId, acceptLanguage);
            //Assert.IsInstanceOf<ProtectedVMInfo> (response, "response is ProtectedVMInfo");
        }
        
    }

}
