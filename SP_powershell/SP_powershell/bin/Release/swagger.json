{
  "swagger": "2.0",
  "info": {
    "description": "No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)",
    "version": "1.0.0",
    "title": "Swagger Server",
    "termsOfService": "Beta",
    "contact": {
      "email": ""
    },
    "license": {
      "name": "",
      "url": ""
    }
  },
  "host": "api.springpathinc.com",
  "basePath": "/v1",
  "tags": [
    {
      "name": "replication"
    },
    {
      "name": "vaai"
    },
    {
      "name": "protect"
    },
    {
      "name": "recovery"
    },
    {
      "name": "about"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/about": {
      "get": {
        "tags": [
          "about"
        ],
        "summary": "HX Installation information",
        "description": "",
        "operationId": "opAboutGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/AboutInfo"
            }
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "protect"
        ],
        "summary": "Gets list of protection groups",
        "description": "",
        "operationId": "opDpGroupGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name of the Group to look for, perhaps we can support wild card here",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Limits the search to incoming or outgoing groups",
            "required": false,
            "type": "string",
            "enum": [
              "INCOMING",
              "OUTGOING"
            ]
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProtectionGroupInfo"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "protect"
        ],
        "summary": "Add a new protection group",
        "description": "",
        "operationId": "opDpGroupPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create group spec",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProtectionGroupSpec"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ProtectionGroupInfo"
            }
          },
          "201": {
            "description": "Returns the newly created protection Group",
            "schema": {
              "$ref": "#/definitions/ProtectionGroupInfo"
            }
          }
        }
      }
    },
    "/groups/{groupId}": {
      "get": {
        "tags": [
          "protect"
        ],
        "summary": "Gets the protection group detail",
        "description": "",
        "operationId": "opDpGroupGroupidGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of the group",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List of fields to return - currently all will be returned",
            "required": false,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ProtectionGroupInfo"
            }
          }
        }
      },
      "put": {
        "tags": [
          "protect"
        ],
        "summary": "Modifies the protection group",
        "description": "",
        "operationId": "opDpGroupGroupidPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of the group",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "VMs to add / remove or the new name",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GroupEditParams"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ProtectionGroupInfo"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "protect"
        ],
        "summary": "Deletes the protection group",
        "description": "",
        "operationId": "opDpGroupGroupidDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of the group",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error"
          }
        }
      }
    },
    "/groups/{groupId}/halt": {
      "put": {
        "tags": [
          "recovery"
        ],
        "summary": "Halt replication for the group",
        "description": "",
        "operationId": "opDpGroupHaltPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of the group",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error"
          }
        }
      }
    },
    "/groups/{groupId}/schedule/replication/{targetClusterId}": {
      "put": {
        "tags": [
          "protect"
        ],
        "summary": "Modifies replication schedule for a group",
        "description": "Since the group owner is unique, no confusion about which side this can be done",
        "operationId": "opDpGroupScheduleReplicationPutTargetClusterId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetClusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Does this work? Else define a new struct",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReplicationSchedule"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReplicationSchedule"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "protect"
        ],
        "summary": "Removes replication schedules for the group for the cluster id",
        "description": "",
        "operationId": "opDpGroupScheduleReplicationTargetClusterIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetClusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReplicationSchedule"
            }
          }
        }
      }
    },
    "/history": {
      "get": {
        "tags": [
          "replication"
        ],
        "summary": "Gets history of replications for appliance",
        "description": "",
        "operationId": "opDpReplicationHistoryGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DisplayReplicationDetails"
              }
            }
          }
        }
      }
    },
    "/ippools/replication": {
      "get": {
        "tags": [
          "replication"
        ],
        "summary": "Replication IP Pool details",
        "description": "",
        "operationId": "opIpoolReplicationGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Replication IP pool details",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IpPoolInfo"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "replication"
        ],
        "summary": "Create a new replication pool",
        "description": "Create Replication IP Pool, and assign the IPs to the nodes",
        "operationId": "opIpoolReplicationPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IpPoolSpec"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IpPoolInfo"
              }
            }
          },
          "201": {
            "description": "New Replication IP Pool information",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IpPoolInfo"
              }
            }
          }
        }
      }
    },
    "/ippools/replication/{poolId}": {
      "get": {
        "tags": [
          "replication"
        ],
        "summary": "Replication IP Pool details",
        "description": "",
        "operationId": "opIpoolReplicationPoolidGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Replication IP pool information",
            "schema": {
              "$ref": "#/definitions/IpPoolInfo"
            }
          }
        }
      },
      "put": {
        "tags": [
          "replication"
        ],
        "summary": "Modify an existing IP Pool",
        "description": "Modify the IP Pool",
        "operationId": "opIpoolReplicationPoolidPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IpRange"
              }
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "New replication IP Pool information",
            "schema": {
              "$ref": "#/definitions/IpPoolInfo"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "replication"
        ],
        "summary": "Delete an IP Pool",
        "description": "Delete the IP Pool",
        "operationId": "opIpoolReplicationPoolidDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted"
          }
        }
      }
    },
    "/network": {
      "get": {
        "tags": [
          "replication"
        ],
        "summary": "Replication network details of the current cluster",
        "description": "",
        "operationId": "opReplicationNetworkGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Replication network details",
            "schema": {
              "$ref": "#/definitions/ReplicationNetwork"
            }
          }
        }
      },
      "post": {
        "tags": [
          "replication"
        ],
        "summary": "create replication network setup for the current cluster",
        "description": "",
        "operationId": "opReplicationNetworkPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReplicationNetwork"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ReplicationNetwork"
            }
          },
          "201": {
            "description": "Replication Network information",
            "schema": {
              "$ref": "#/definitions/ReplicationNetwork"
            }
          }
        }
      },
      "put": {
        "tags": [
          "replication"
        ],
        "summary": "Modify replication network details of the current cluster",
        "description": "",
        "operationId": "opReplicationNetworkPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReplicationNetwork"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Replication network details",
            "schema": {
              "$ref": "#/definitions/ReplicationNetwork"
            }
          }
        }
      }
    },
    "/peers": {
      "get": {
        "tags": [
          "replication"
        ],
        "summary": "Replication peers of the current cluster",
        "description": "",
        "operationId": "opReplicationPeerGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Replication peers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MapPairErToReplicationPeerInfo"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "replication"
        ],
        "summary": "Add a new replication peer",
        "description": "",
        "operationId": "opReplicationPeerPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReplicationPeerSpec"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/MapPairErToReplicationPeerInfo"
            }
          },
          "201": {
            "description": "Replication peers",
            "schema": {
              "$ref": "#/definitions/MapPairErToReplicationPeerInfo"
            }
          }
        }
      }
    },
    "/peers/{peerClusterId}": {
      "put": {
        "tags": [
          "replication"
        ],
        "summary": "Delete a replication peer",
        "description": "",
        "operationId": "opReplicationPeerPeerClusterIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "peerClusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Credential"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Replication peer deleted."
          }
        }
      }
    },
    "/peers/{peerClusterId}/datastores": {
      "get": {
        "tags": [
          "replication"
        ],
        "summary": "Get peer datastore information",
        "description": "",
        "operationId": "opReplicationPeerPeerClusterIdDatastoresGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "peerClusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Replication peers datastores",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReplicationDatastore"
              }
            }
          }
        }
      }
    },
    "/peers/{peerClusterId}/datastores/map": {
      "put": {
        "tags": [
          "replication"
        ],
        "summary": "Update datastore mapping",
        "description": "",
        "operationId": "opReplicationPeerPeerClusterIdDatastoresMapPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "peerClusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MapReplPlatDatastoreToReplPlatDatastore"
              }
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Replication peer info",
            "schema": {
              "$ref": "#/definitions/MapPairErToReplicationPeerInfo"
            }
          }
        }
      }
    },
    "/recovery/jobs": {
      "get": {
        "tags": [
          "recovery"
        ],
        "summary": "Recover job status for the given VM",
        "description": "",
        "operationId": "opDpVmRecoveryJobsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          }
        }
      }
    },
    "/recovery/jobs/{jobId}": {
      "get": {
        "tags": [
          "recovery"
        ],
        "summary": "Recover job status for the given VM",
        "description": "",
        "operationId": "opDpVmRecoveryJobsJobIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          }
        }
      }
    },
    "/vaai/vm/clone/job": {
      "post": {
        "tags": [
          "vaai"
        ],
        "summary": "Creates a specified number of clones for the given vm.",
        "description": "",
        "operationId": "opVaaiVmCloneJobPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VmCloneSpec"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        }
      }
    },
    "/vaai/vm/clone/job/{jobid}/status": {
      "get": {
        "tags": [
          "vaai"
        ],
        "summary": "Return job status",
        "description": "",
        "operationId": "opVaaiVmCloneJobJobidGetStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          },
          "201": {
            "description": "Return vm clone job status: Completed",
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        }
      }
    },
    "/vaai/vm/clone/jobs": {
      "get": {
        "tags": [
          "vaai"
        ],
        "summary": "Get list of clones jobs.",
        "description": "",
        "operationId": "opVaaiVmCloneJobsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "maxJobs",
            "in": "query",
            "description": "maximum number of jobs will be returned",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxTimeDiffMinutes",
            "in": "query",
            "description": "jobs created in last \"maxTimeDiffMinutes\" minutes",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          }
        }
      }
    },
    "/vms": {
      "get": {
        "tags": [
          "protect"
        ],
        "summary": "Gets list of protected VMs",
        "description": "",
        "operationId": "opDpVmGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "name of the VM to look for, perhaps we can support wild card here",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Limits the search to incoming or outgoing virtual machines",
            "required": false,
            "type": "string",
            "enum": [
              "INCOMING",
              "OUTGOING"
            ]
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProtectedVMInfo"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "protect"
        ],
        "summary": "Protect a VM",
        "description": "",
        "operationId": "opDpVmPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Protect VM Spec",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProtectedVMSpec"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ProtectedVMInfo"
            }
          },
          "201": {
            "description": "Returns the newly created protected vm object",
            "schema": {
              "$ref": "#/definitions/ProtectedVMInfo"
            }
          }
        }
      }
    },
    "/vms/{vmId}": {
      "get": {
        "tags": [
          "protect"
        ],
        "summary": "Gets the details of a protected VM",
        "description": "",
        "operationId": "opDpVmVmidGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ProtectedVMInfo"
            }
          }
        }
      }
    },
    "/vms/{vmId}/halt": {
      "put": {
        "tags": [
          "recovery"
        ],
        "summary": "Halt replication for the given VM",
        "description": "",
        "operationId": "opDpVmHaltPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error"
          }
        }
      }
    },
    "/vms/{vmId}/recovery/failover": {
      "put": {
        "tags": [
          "recovery"
        ],
        "summary": "Failover recovery for the given VM",
        "description": "",
        "operationId": "opDpVmRecoveryFailoverPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Folder, Resource and Network options for recovery",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RecoverVmOptions"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/vms/{vmId}/recovery/test": {
      "put": {
        "tags": [
          "recovery"
        ],
        "summary": "Test recovery for the given VM",
        "description": "",
        "operationId": "opDpVmRecoveryTestPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Folder, Resource and Network options for recovery",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RecoverVmOptions"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/vms/{vmId}/schedule/replication/{targetClusterId}": {
      "put": {
        "tags": [
          "protect"
        ],
        "summary": "Modifies replication schedule for a vm",
        "description": "",
        "operationId": "opDpVmScheduleReplicationPutTargetClusterId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetClusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Does this work? Else define a new struct",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReplicationSchedule"
            }
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReplicationSchedule"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "protect"
        ],
        "summary": "Removes replication schedules for the vm for the cluster id",
        "description": "Unprotects a VM",
        "operationId": "opDpVmScheduleReplicationTargetClusterIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vmId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "targetClusterId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Unexpected Error",
            "schema": {
              "$ref": "#/definitions/ReplicationSchedule"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "SnapshotStatus": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILED",
            "IN_PROGRESS",
            "DELETED",
            "DELETING",
            "NONE"
          ]
        },
        "timestamp": {
          "type": "integer",
          "format": "int64",
          "description": "Timestamp at which the Snapshot is taken"
        },
        "description": {
          "type": "string",
          "description": "Description of this Snapshot Point"
        },
        "usedSpace": {
          "type": "integer",
          "format": "int64",
          "description": "Space Used by this Snapshot Point"
        },
        "pctComplete": {
          "type": "integer",
          "format": "int32"
        },
        "ex": {
          "$ref": "#/definitions/ErrorStack"
        }
      }
    },
    "IpPoolSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name - not necessarily unique., optional"
        },
        "description": {
          "type": "string",
          "description": "Optional description."
        },
        "ipRanges": {
          "type": "array",
          "description": "IP Ranges for the pool.",
          "items": {
            "$ref": "#/definitions/IpRange"
          }
        },
        "subnet": {
          "type": "string",
          "description": "Subnet as p.q.r.s/<number of bits>"
        },
        "gateway": {
          "type": "string",
          "description": "Gateway for the pool."
        },
        "vlanid": {
          "type": "integer",
          "format": "int32",
          "description": "VLAN id of the subnet"
        }
      }
    },
    "ReplicationClusterErToSchedule": {
      "type": "object",
      "required": [
        "schedule",
        "targetClusterEr"
      ],
      "properties": {
        "targetClusterEr": {
          "$ref": "#/definitions/EntityRef"
        },
        "schedule": {
          "$ref": "#/definitions/ReplicationSchedule"
        }
      },
      "description": "A map from Replication Cluster Er to the schedule"
    },
    "ReplicationSchedule": {
      "type": "object",
      "required": [
        "enabled",
        "intervalInMinutes",
        "quiesceType"
      ],
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "intervalInMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "integer",
          "format": "int64",
          "description": "Replication start time in milliseconds"
        },
        "quiesceType": {
          "type": "string",
          "description": "Snapshot quiesce type",
          "enum": [
            "NONE",
            "CRASH",
            "VMTOOLS",
            "APP_CONSISTENT"
          ]
        }
      },
      "description": "Schedule for replication"
    },
    "ReplicationPeerSpec": {
      "type": "object",
      "required": [
        "cred",
        "mgmtIp",
        "name"
      ],
      "properties": {
        "mgmtIp": {
          "type": "string",
          "description": "Peer Cluster management IP"
        },
        "cred": {
          "$ref": "#/definitions/Credential"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "EntityRefToStepMap": {
      "type": "object",
      "properties": {
        "er": {
          "$ref": "#/definitions/EntityRef"
        },
        "step": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Step"
          }
        }
      }
    },
    "VirtualMachine": {
      "type": "object",
      "required": [
        "statusCode",
        "uuid"
      ],
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Virtual machine BIOS UUID"
        },
        "statusCode": {
          "type": "string",
          "description": "Status of the VM",
          "enum": [
            "VM_ACCESSIBLE",
            "VM_INACCESSIBLE",
            "VM_NOT_SUPPORTED",
            "NONE"
          ]
        },
        "runTimeInfo": {
          "description": "Virtual machine info details",
          "$ref": "#/definitions/VirtualMachineRuntimeInfo"
        }
      },
      "description": "Virtual Machine"
    },
    "MapReplPlatDatastoreToReplPlatDatastore": {
      "type": "object",
      "required": [
        "key",
        "oper",
        "value"
      ],
      "properties": {
        "key": {
          "$ref": "#/definitions/ReplicationPlatDatastore"
        },
        "value": {
          "$ref": "#/definitions/ReplicationPlatDatastore"
        },
        "oper": {
          "type": "string",
          "description": "Datastore mapping operation",
          "enum": [
            "ADD",
            "DELETE"
          ]
        }
      }
    },
    "ProtectedVMSpec": {
      "type": "object",
      "required": [
        "vmEr"
      ],
      "properties": {
        "vmEr": {
          "$ref": "#/definitions/EntityRef"
        },
        "schedule": {
          "type": "array",
          "description": "A Map from Replication Cluster Id to the schedule",
          "items": {
            "$ref": "#/definitions/ReplicationClusterErToSchedule"
          }
        }
      }
    },
    "DvsDeviceNetworkMap": {
      "type": "object",
      "properties": {
        "devicekey": {
          "type": "string",
          "description": "device key"
        },
        "dvsportgroupname": {
          "type": "string",
          "description": "dvs port group name"
        }
      },
      "description": "Storage Snapshot, as opposed to Hypervisor Snapshot"
    },
    "LocalizableMessage": {
      "type": "object",
      "required": [
        "msgid",
        "msgstr",
        "params"
      ],
      "properties": {
        "msgid": {
          "type": "string",
          "description": "Message Id"
        },
        "msgidPlural": {
          "type": "string",
          "description": "Message id plural "
        },
        "msgctxt": {
          "type": "string",
          "description": "Message context"
        },
        "msgstr": {
          "type": "string",
          "description": "Message content"
        },
        "params": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalizableValue"
          }
        }
      }
    },
    "SnapshotInfo": {
      "type": "object",
      "properties": {
        "vmClusterName": {
          "type": "string",
          "description": " Name of the Cluster"
        },
        "site": {
          "type": "string",
          "description": "site role",
          "enum": [
            "PRIMARY",
            "SECONDARY"
          ]
        },
        "vmSnapshotEr": {
          "description": " EntityRef of this VmSnapshot",
          "$ref": "#/definitions/EntityRef"
        },
        "vmSnapshotStatus": {
          "description": " Status for this Snapshot Point",
          "$ref": "#/definitions/SnapshotStatus"
        },
        "vmReplicationStatus": {
          "description": " Status for this Snapshot Point Replication",
          "$ref": "#/definitions/ReplicationStatus"
        },
        "vmInfo": {
          "description": "Virtual machine BIOS uuid, moid and vmx path with optional StVirtualMachineInfo details",
          "$ref": "#/definitions/VirtualMachine"
        }
      },
      "description": "Storage Snapshot, as opposed to Hypervisor Snapshot"
    },
    "RpoStatus": {
      "type": "object",
      "required": [
        "rpoExceeded"
      ],
      "properties": {
        "rpoExceeded": {
          "type": "boolean",
          "description": "Whether delayed",
          "default": false
        },
        "expected": {
          "type": "integer",
          "format": "int64"
        },
        "actual": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Credential": {
      "type": "object",
      "required": [
        "password",
        "username"
      ],
      "properties": {
        "username": {
          "type": "string",
          "description": "Username"
        },
        "password": {
          "type": "string",
          "description": "Password"
        }
      }
    },
    "ReplicationPlatDatastorePair": {
      "type": "object",
      "required": [
        "ads",
        "bds"
      ],
      "properties": {
        "ads": {
          "$ref": "#/definitions/ReplicationPlatDatastore"
        },
        "bds": {
          "$ref": "#/definitions/ReplicationPlatDatastore"
        }
      }
    },
    "DisplayReplicationDetails": {
      "type": "object",
      "required": [
        "dataTransferred",
        "direction",
        "precentTransferred",
        "remoteClusterName",
        "startTime",
        "status",
        "vmName"
      ],
      "properties": {
        "vmName": {
          "type": "string",
          "description": "Name of the Virtual Machine"
        },
        "remoteClusterName": {
          "type": "string",
          "description": "Name of the remote Cluster"
        },
        "status": {
          "type": "string",
          "description": "Status of replication between current and remote cluster",
          "enum": [
            "SUCCESS",
            "FAILED",
            "PAUSED",
            "STARTING",
            "IN_PROGRESS",
            "DELETED",
            "NONE"
          ]
        },
        "startTime": {
          "type": "integer",
          "format": "int64",
          "description": "Start time of replication between current and remote cluster in milliseconds"
        },
        "endTime": {
          "type": "integer",
          "format": "int64",
          "description": "End time of replication between current and remote cluster in milliseconds"
        },
        "protectionGroup": {
          "type": "string",
          "description": "Protection Group to which the Virtual Machine belongs"
        },
        "direction": {
          "type": "string",
          "description": "Direction of replication between current and remote cluster"
        },
        "dataTransferred": {
          "type": "integer",
          "format": "int64",
          "description": "Bytes transferred between current and remote cluster as part of this replication"
        },
        "precentTransferred": {
          "type": "integer",
          "format": "int32",
          "description": "Percentage of replication complete between current and remote cluster as part of this replication"
        }
      }
    },
    "ReplicationNetwork": {
      "type": "object",
      "properties": {
        "networkName": {
          "type": "string",
          "description": "Name of the network/portgroup."
        },
        "subnet": {
          "type": "string",
          "description": "Subnet in p.q.r.s notation."
        },
        "ipRanges": {
          "type": "array",
          "description": "Ranges of the IP Addresses.",
          "items": {
            "$ref": "#/definitions/IpRange"
          }
        },
        "gateway": {
          "type": "string",
          "description": "Gateway."
        },
        "vlanid": {
          "type": "integer",
          "format": "int32",
          "description": "VLAN id"
        },
        "bandwidth": {
          "type": "integer",
          "format": "int64",
          "description": "Cluster wide send side bandwidth."
        },
        "unusedIps": {
          "type": "integer",
          "format": "int32",
          "description": "Unused Ips from IpPools"
        },
        "usedIps": {
          "type": "integer",
          "format": "int32",
          "description": "Used Ips from IpPools"
        },
        "vlanReplication": {
          "$ref": "#/definitions/VlanReplication"
        }
      }
    },
    "ErrorStack": {
      "type": "object",
      "required": [
        "message",
        "messageId"
      ],
      "properties": {
        "messageId": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "MapPairErToReplicationPeerInfo": {
      "type": "object",
      "required": [
        "er",
        "peerInfo"
      ],
      "properties": {
        "er": {
          "$ref": "#/definitions/EntityRef"
        },
        "peerInfo": {
          "$ref": "#/definitions/ReplicationPeerInfo"
        }
      },
      "description": "One element in the map for { PairId => ReplicationPeerInfo }"
    },
    "ProtectionGroupInfo": {
      "type": "object",
      "required": [
        "er",
        "primaryEr",
        "protectionStatus",
        "schedule"
      ],
      "properties": {
        "er": {
          "$ref": "#/definitions/EntityRef"
        },
        "description": {
          "type": "string",
          "description": "Description of the group"
        },
        "primaryEr": {
          "$ref": "#/definitions/EntityRef"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProtectedVMInfo"
          }
        },
        "schedule": {
          "type": "array",
          "description": "A Map from Replication Cluster Id to the schedule",
          "items": {
            "$ref": "#/definitions/ReplicationClusterErToSchedule"
          }
        },
        "protectionStatus": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "HALTED",
            "RECOVERED",
            "IN_PROGRESS",
            "FAILED"
          ]
        },
        "ex": {
          "$ref": "#/definitions/ErrorStack"
        }
      }
    },
    "VirtualMachineRuntimeInfo": {
      "type": "object",
      "required": [
        "moid",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Virtual Machine"
        },
        "moid": {
          "type": "string",
          "description": "Virtual machine MOID"
        },
        "vmxPath": {
          "type": "string",
          "description": "vmxPath in VC datastore format"
        },
        "folder": {
          "type": "string",
          "description": "Folder which VM belongs to"
        },
        "resourcePool": {
          "type": "string",
          "description": "Resource pool which VM belongs to"
        },
        "hostName": {
          "type": "string",
          "description": "Hostname of Virtual Machine"
        },
        "numCpu": {
          "type": "integer",
          "format": "int32",
          "description": "Number of CPUs of VM"
        },
        "guestId": {
          "type": "string",
          "description": "Guest operating system identifier (short name), if known."
        },
        "guestFullName": {
          "type": "string",
          "description": " Guest operating system full name, if known. "
        },
        "guestFamily": {
          "type": "string",
          "description": " Guest operating system family, if known"
        },
        "guestState": {
          "type": "string",
          "description": "state are: running, shuttingdown, resetting, standby, notrunning, unknown"
        },
        "provisionedSize": {
          "type": "integer",
          "format": "int64",
          "description": "Provisioned Size of Virtual Machine"
        },
        "usedSize": {
          "type": "integer",
          "format": "int64",
          "description": "Used Size of Virtual Machine"
        },
        "cpuUsage": {
          "type": "integer",
          "format": "int32",
          "description": "CPU Usage of Virtual Machine"
        },
        "memoryMB": {
          "type": "integer",
          "format": "int32",
          "description": "CPU Memory in MB of VM"
        },
        "memoryUsage": {
          "type": "integer",
          "format": "int32",
          "description": "memory usage of Virtual Machine"
        },
        "version": {
          "type": "string",
          "description": "Vm version"
        },
        "powerState": {
          "type": "string",
          "description": "States: poweredOff/poweredOn/suspended"
        },
        "connectionState": {
          "type": "string",
          "description": "States:connected/disconnected/inaccessible/invalid/orphaned"
        },
        "dvsDeviceNetworkMaps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DvsDeviceNetworkMap"
          }
        }
      },
      "description": "Virtual Machine runtime details"
    },
    "EntityRef": {
      "type": "object",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the entity"
        },
        "type": {
          "type": "string",
          "description": "Type of the entity",
          "enum": [
            "DISK",
            "PNODE",
            "NODE",
            "CLUSTER",
            "DATASTORE",
            "VIRTNODE",
            "VIRTCLUSTER",
            "VIRTDATASTORE",
            "VIRTMACHINE",
            "PDISK",
            "PDATASTORE",
            "VIRTMACHINESNAPSHOT",
            "FOLDER",
            "RESOURCEPOOL",
            "FILE",
            "VIRTDATACENTER",
            "REPLICATION_APPLIANCE",
            "REPLICATION_JOB",
            "IP_POOL",
            "DP_VM_SNAPSHOT",
            "DP_VMGROUP_SNAPSHOT",
            "DP_VM",
            "DP_VMGROUP",
            "DP_VM_CONFIG",
            "DP_VM_SNAPSHOT_POINT",
            "CLUSTER_PAIR"
          ]
        },
        "id": {
          "type": "string",
          "description": "Uuid of the entity"
        },
        "idtype": {
          "type": "string",
          "description": "Type of entity id",
          "enum": [
            "VCMOID",
            "VMBIOSUUID",
            "VMDSPATH"
          ]
        },
        "confignum": {
          "type": "integer",
          "format": "int64",
          "description": "Config number"
        }
      }
    },
    "LocalizableValue": {
      "type": "object",
      "required": [
        "key",
        "ltype",
        "position",
        "value"
      ],
      "properties": {
        "position": {
          "type": "integer",
          "format": "int32",
          "description": "Position"
        },
        "ltype": {
          "type": "string",
          "description": "Localizable type",
          "enum": [
            "UNKNOWN",
            "NUMBER",
            "STRING",
            "NAME",
            "EMAIL",
            "HOSTNAME",
            "DATETIME",
            "TIMEDELTA",
            "BYTESIZE"
          ]
        },
        "key": {
          "type": "string",
          "description": "Key"
        },
        "value": {
          "type": "string",
          "description": "Value"
        }
      }
    },
    "VmCloneSpec": {
      "type": "object",
      "required": [
        "cloneNamePrefix",
        "numberOfClones",
        "vmId",
        "vmName"
      ],
      "properties": {
        "vmId": {
          "type": "string",
          "description": "ID of the VM to be cloned"
        },
        "vmName": {
          "type": "string",
          "description": "Name of the VM to be cloned"
        },
        "cloneNamePrefix": {
          "type": "string",
          "description": "Prefix of clone's name"
        },
        "numberOfClones": {
          "type": "integer",
          "format": "int32",
          "description": "Number of clones required"
        },
        "parallel": {
          "type": "integer",
          "format": "int32",
          "description": "Number of parallel"
        },
        "powerOn": {
          "type": "boolean",
          "description": "Power on after cloning",
          "default": false
        },
        "customSpecName": {
          "type": "string",
          "description": "Guest Customization spec for the cloned VM(s)"
        },
        "vmGuestNamePrefix": {
          "type": "string",
          "description": "Guest name for the cloned VM(s) if different from vm name"
        },
        "cloneNameStartNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Start number suffix for the VM clone name"
        },
        "cloneNameIncrement": {
          "type": "integer",
          "format": "int32",
          "description": "Increment of the suffix for the VM clones"
        },
        "resourcePoolId": {
          "type": "string",
          "description": "ID of the Resource pool to place the cloned VM(s) on"
        },
        "resourcePoolName": {
          "type": "string",
          "description": "Name of the Resource pool to place the cloned VM(s) on"
        },
        "userName": {
          "type": "string",
          "description": "User Name"
        }
      }
    },
    "Step": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Step name"
        },
        "state": {
          "type": "string",
          "description": "state of step",
          "enum": [
            "NOTSTARTED",
            "INPROGRESS",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "description": {
          "type": "string",
          "description": "Step description"
        },
        "entity": {
          "$ref": "#/definitions/EntityRef"
        },
        "fault": {
          "$ref": "#/definitions/ErrorStack"
        },
        "completion": {
          "type": "integer",
          "format": "int32"
        },
        "parent": {
          "$ref": "#/definitions/EntityRef"
        },
        "isValidation": {
          "type": "boolean",
          "description": "Validation",
          "default": false
        },
        "lcDescription": {
          "$ref": "#/definitions/LocalizableMessage"
        }
      }
    },
    "ReplicationPlatDatastore": {
      "type": "object",
      "required": [
        "clusterEr",
        "datastoreEr"
      ],
      "properties": {
        "clusterEr": {
          "$ref": "#/definitions/EntityRef"
        },
        "datastoreEr": {
          "$ref": "#/definitions/EntityRef"
        }
      }
    },
    "ProtectedVMInfo": {
      "type": "object",
      "required": [
        "clusterEr",
        "er",
        "protectionStatus",
        "schedule"
      ],
      "properties": {
        "er": {
          "$ref": "#/definitions/EntityRef"
        },
        "clusterEr": {
          "$ref": "#/definitions/EntityRef"
        },
        "schedule": {
          "type": "array",
          "description": "A Map from Replication Cluster Id to the schedule additional properties - ReplicationSchedule",
          "items": {
            "$ref": "#/definitions/ReplicationClusterErToSchedule"
          }
        },
        "protectionStatus": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "HALTED",
            "RECOVERED",
            "IN_PROGRESS",
            "FAILED"
          ]
        },
        "protectionInfo": {
          "$ref": "#/definitions/ProtectionInfo"
        },
        "ex": {
          "$ref": "#/definitions/ErrorStack"
        }
      }
    },
    "VlanReplication": {
      "type": "object",
      "properties": {
        "ucsmHostname": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "vlanName": {
          "type": "string"
        }
      }
    },
    "ReplicationPeerInfo": {
      "type": "object",
      "required": [
        "er",
        "mcip",
        "replCip"
      ],
      "properties": {
        "er": {
          "$ref": "#/definitions/EntityRef"
        },
        "mcip": {
          "type": "string",
          "description": "Management Cluster IP"
        },
        "dcip": {
          "type": "string",
          "description": "Data Cluster IP"
        },
        "replCip": {
          "type": "string",
          "description": "Replication Cluster IP"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MapPortTypeToPortNumber"
          }
        },
        "datastores": {
          "type": "array",
          "description": "List of Paired Datastores",
          "items": {
            "$ref": "#/definitions/ReplicationPlatDatastorePair"
          }
        },
        "status": {
          "type": "string",
          "description": "Peer Cluster Status",
          "enum": [
            "ONLINE",
            "OFFLINE"
          ]
        },
        "statusDetails": {
          "type": "string",
          "description": "Peer Cluster Status Details",
          "enum": [
            "UNKNOWN",
            "UPGRADING",
            "SHUTDOWN",
            "ENOSPACE"
          ]
        }
      }
    },
    "RecoverVmOptions": {
      "type": "object",
      "properties": {
        "resourcePoolEr": {
          "$ref": "#/definitions/EntityRef"
        },
        "folderEr": {
          "$ref": "#/definitions/EntityRef"
        },
        "testNetwork": {
          "type": "string",
          "description": "Test (Bubble) network to use for test recovery. Either networkMap or testNetwork can be specified, but not both. This cannot be used for failover recovery."
        },
        "powerOn": {
          "type": "boolean",
          "description": "Power ON the VM after recovery or not",
          "default": false
        },
        "networkMap": {
          "type": "array",
          "description": "Array of network mappings. Either networkMap or testNetwork can be specified, but not both.",
          "items": {
            "$ref": "#/definitions/NetworkMapping"
          }
        },
        "newName": {
          "type": "string",
          "description": "New name for the test recovery VM."
        }
      }
    },
    "ReplicationStatus": {
      "type": "object",
      "required": [
        "bytesReplicated",
        "startTime",
        "status"
      ],
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILED",
            "PAUSED",
            "IN_USE",
            "STARTING",
            "REPLICATING",
            "NONE"
          ]
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "bytesReplicated": {
          "type": "integer",
          "format": "int64"
        },
        "packEr": {
          "$ref": "#/definitions/EntityRef"
        },
        "pctComplete": {
          "type": "integer",
          "format": "int32"
        },
        "ex": {
          "$ref": "#/definitions/ErrorStack"
        },
        "rpoStatus": {
          "$ref": "#/definitions/RpoStatus"
        }
      }
    },
    "MapPortTypeToPortNumber": {
      "type": "object",
      "required": [
        "i16",
        "string"
      ],
      "properties": {
        "string": {
          "type": "string"
        },
        "i16": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Replication Ports Key = \"Control\" || \"Data\" Value = port number"
    },
    "Job": {
      "type": "object",
      "required": [
        "isCancelRequested",
        "isCanceled",
        "jobSteps",
        "jobid",
        "lifetimeAfterExitMillis",
        "methodName",
        "outParameters",
        "state",
        "summaryStepState",
        "suspendOnExit",
        "timeSubmittedMillis"
      ],
      "properties": {
        "jobid": {
          "type": "string",
          "description": "job id"
        },
        "state": {
          "type": "string",
          "description": "State of the job",
          "enum": [
            "NEW",
            "STARTING",
            "RUNNING",
            "SUSPENDED",
            "SHUTTING_DOWN",
            "COMPLETED",
            "TERMINATED",
            "CANCELLED",
            "EXCEPTION",
            "STALLED"
          ]
        },
        "timeSubmittedMillis": {
          "type": "integer",
          "format": "int64",
          "description": "Job submitted time"
        },
        "timeStartedMillis": {
          "type": "integer",
          "format": "int64",
          "description": "Time elapsed"
        },
        "timeElapsedMillis": {
          "type": "integer",
          "format": "int64",
          "description": "Time elapsed"
        },
        "outParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StringToListStringMap"
          }
        },
        "jobSteps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityRefToStepMap"
          }
        },
        "suspendOnExit": {
          "type": "boolean",
          "description": " suspend on exit",
          "default": false
        },
        "methodName": {
          "type": "string",
          "description": "Method name"
        },
        "description": {
          "type": "string",
          "description": "Job description"
        },
        "tag": {
          "type": "string",
          "description": "Job tag"
        },
        "owner": {
          "type": "string",
          "description": "Job owner"
        },
        "message": {
          "type": "string",
          "description": "Job message"
        },
        "isCancelRequested": {
          "type": "boolean",
          "description": "Cancel requested",
          "default": false
        },
        "isCanceled": {
          "type": "boolean",
          "description": "Job Canceled",
          "default": false
        },
        "percentComplete": {
          "type": "integer",
          "format": "int32",
          "description": "Percent completed"
        },
        "lifetimeAfterExitMillis": {
          "type": "integer",
          "format": "int64",
          "description": "Lifetime after exit in milliseconds"
        },
        "summaryStepState": {
          "type": "string",
          "description": "Step state",
          "enum": [
            "NOTSTARTED",
            "INPROGRESS",
            "SUCCEEDED",
            "FAILED"
          ]
        },
        "lcDescription": {
          "$ref": "#/definitions/LocalizableMessage"
        },
        "lcMessage": {
          "$ref": "#/definitions/LocalizableMessage"
        }
      }
    },
    "GroupEditParams": {
      "type": "object",
      "properties": {
        "vmsToAdd": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityRef"
          }
        },
        "vmsToRemove": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityRef"
          }
        },
        "rename": {
          "type": "string",
          "description": "New name of the group, leave empty, if unchanged"
        }
      }
    },
    "ReplicationDatastore": {
      "type": "object",
      "required": [
        "clusterEr",
        "datastoreEr"
      ],
      "properties": {
        "clusterEr": {
          "$ref": "#/definitions/EntityRef"
        },
        "datastoreEr": {
          "$ref": "#/definitions/EntityRef"
        },
        "virtDatastoreEr": {
          "$ref": "#/definitions/EntityRef"
        },
        "totalCapacity": {
          "type": "integer",
          "format": "int64",
          "description": "Datastore Total Capacity in bytes"
        },
        "freeCapacity": {
          "type": "integer",
          "format": "int64",
          "description": "Datastore Free Capacity in bytes"
        }
      }
    },
    "AboutInfo": {
      "type": "object",
      "required": [
        "apiVersion",
        "build",
        "fullName",
        "instanceUuid",
        "locale",
        "modelNumber",
        "name",
        "productVersion",
        "serialNumber",
        "serviceType"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "build": {
          "type": "string"
        },
        "displayVersion": {
          "type": "string"
        },
        "fullName": {
          "type": "string"
        },
        "instanceUuid": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "modelNumber": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "pid": {
          "type": "string"
        },
        "productVersion": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        }
      }
    },
    "VmProtectionSpaceUsage": {
      "type": "object",
      "properties": {
        "spaceUsage": {
          "type": "integer",
          "format": "int64",
          "description": "Space attributable to the protection of the VM"
        }
      }
    },
    "IpPoolInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name - not necessarily unique."
        },
        "uuid": {
          "type": "string",
          "description": "Pool Identitifer."
        },
        "description": {
          "type": "string",
          "description": "Optional description."
        },
        "ipRanges": {
          "type": "array",
          "description": "IP Ranges for the pool.",
          "items": {
            "$ref": "#/definitions/IpRange"
          }
        },
        "usedIpRanges": {
          "type": "array",
          "description": "Currently used IP Ranges in the pool.",
          "items": {
            "$ref": "#/definitions/IpRange"
          }
        },
        "subnet": {
          "type": "string",
          "description": "Subnet as p.q.r.s/<number of bits>, can't be changed once set"
        },
        "gateway": {
          "type": "string",
          "description": "Gateway for the pool."
        }
      }
    },
    "ProtectionInfo": {
      "type": "object",
      "properties": {
        "vmCurrentProtectionInfo": {
          "description": "Current Protection Info (Snapshot Status + Replication + Vm Info)",
          "$ref": "#/definitions/SnapshotInfo"
        },
        "vmLastSuccessfulProtectionInfo": {
          "description": "Last Successful Protection Info ((Snapshot Status + Replication + Vm Info)",
          "$ref": "#/definitions/SnapshotInfo"
        },
        "vmSpaceUsage": {
          "description": "Protection Space Usage",
          "$ref": "#/definitions/VmProtectionSpaceUsage"
        }
      }
    },
    "StringToListStringMap": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Param name"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NetworkMapping": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Source Network PortGroup name"
        },
        "value": {
          "type": "string",
          "description": "Destination Network PortGroup name"
        }
      }
    },
    "IpRange": {
      "type": "object",
      "properties": {
        "beginAddress": {
          "type": "string",
          "description": "Begin IP address. IPv4 only."
        },
        "endAddress": {
          "type": "string",
          "description": "Ending IP address."
        },
        "canDelete": {
          "type": "boolean",
          "description": "Flag to check if the IP Range can be deleted",
          "default": false
        }
      }
    },
    "ProtectionGroupSpec": {
      "type": "object",
      "required": [
        "name",
        "schedule"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the group"
        },
        "description": {
          "type": "string",
          "description": "Description of the group"
        },
        "members": {
          "type": "array",
          "description": "Must be virtual machines for 1.0, may include groups later",
          "items": {
            "$ref": "#/definitions/EntityRef"
          }
        },
        "schedule": {
          "type": "array",
          "description": "A Map from Replication Cluster Id to the schedule",
          "items": {
            "$ref": "#/definitions/ReplicationClusterErToSchedule"
          }
        }
      }
    }
  }
}
